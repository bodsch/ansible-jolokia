---

- name: install tomcat
  ansible.builtin.include_tasks: install_tomcat.yml

- name: check for deployed application
  ansible.builtin.stat:
    path: "{{ jolokia_home }}/current/webapps/jolokia/META-INF/MANIFEST.MF"
  register: _deployed_application

- name: install jolokia
  when:
    - _deployed_application.stat is defined
    - not _deployed_application.stat.exists
  block:
    - name: create application directory
      ansible.builtin.file:
        path: "{{ jolokia_home }}/current/webapps/jolokia"
        state: directory
        owner: "{{ jolokia_user }}"
        group: "{{ jolokia_group }}"
        mode: 0750

    - name: download jolokia application to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ jolokia_download_url }}"
        dest: "{{ local_tmp_directory }}/{{ jolokia_file_name }}"
        mode: 0640
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      delegate_to: localhost
      check_mode: false
      tags:
        - jolokia

    - name: deploy application archiv
      ansible.builtin.copy:
        src: "{{ local_tmp_directory }}/{{ jolokia_file_name }}"
        dest: "{{ deployment_tmp_directory }}"
        mode: 0640

    - name: unpack archive
      ansible.builtin.unarchive:
        src: "{{ deployment_tmp_directory }}/{{ jolokia_file_name }}"
        dest: "{{ jolokia_home }}/current/webapps/jolokia/"
        owner: "{{ jolokia_user }}"
        group: "{{ jolokia_group }}"
        mode: 0750
        copy: false

- name: create systemd service unit
  ansible.builtin.template:
    src: "init/systemd/jolokia.service.j2"
    dest: "{{ systemd_lib_directory }}/jolokia.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - systemctl daemon-reload
    - restart jolokia

- name: create custom fact file
  bodsch.core.facts:
    name: jolokia
    facts:
      version: "{{ jolokia_version }}"
      tomcat_version: "{{ jolokia_tomcat_version }}"

...
